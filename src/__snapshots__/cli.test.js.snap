// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Invig cli invigorates an entire directory 1`] = `""`;

exports[`Invig cli invigorates an entire directory 2`] = `
"› invig › fixture/tmp ›
   Adding npm task project config
   Adding dependencies task project config
   Writing eslint project config
   Writing babel project config
   Writing eslint ignores
   Writing back project config
   Running npm install to accomodate these changes: Add babel-cli to devDependencies. Add babel-core to devDependencies. Add babel-eslint to devDependencies. Add babel-plugin-add-module-exports to devDependencies. Add babel-plugin-es6-promise to devDependencies. Add babel-plugin-syntax-async-functions to devDependencies. Add babel-plugin-transform-async-to-generator to devDependencies. Add babel-plugin-transform-object-assign to devDependencies. Add babel-preset-es2015 to devDependencies. Add eslint to devDependencies. Add eslint-config-standard to devDependencies. Add eslint-plugin-import to devDependencies. Add eslint-plugin-node to devDependencies. Add eslint-plugin-promise to devDependencies. Add eslint-plugin-react to devDependencies. Add eslint-plugin-standard to devDependencies
 › invig › fixture/tmp › yarn ›
   Executing: yarn || npm install
   yarn install vX.X.X
   info No lockfile found.
   success Saved lockfile.
   Done in X.Xs.
 › invig › fixture/tmp/hack-sitemap.coffee › rm ›
   Executing: #{SCROLEX_ROOT}/node_modules/.bin/decaffeinate --no-array-includes --loose-includes --loose-for-of --allow-invalid-constructors --loose-default-params #{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.coffee && rm -f #{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.coffee
   #{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.coffee → #{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.js
 › invig › fixture/tmp/hack-sitemap.js › mv ›
   Executing: #{SCROLEX_ROOT}/node_modules/.bin/lebab --transform=arrow,for-of,for-each,arg-rest,arg-spread,obj-method,obj-shorthand,no-strict,multi-var,let,class,template,default-param,destruct-param #{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.js --out-file #{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.js.es6 && mv -f #{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.js.es6 #{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.js
 › invig › fixture/tmp/hack-sitemap.js › prettier ›
   Executing: #{SCROLEX_ROOT}/node_modules/.bin/prettier --single-quote --print-width 180 --write #{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.js
   #{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.js#{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.js XXms
 › invig › fixture/tmp/hack-sitemap.js › eslint ›
   Executing: #{SCROLEX_ROOT}/node_modules/.bin/eslint --config #{SCROLEX_ROOT}/fixture/tmp/.eslintrc --fix #{SCROLEX_ROOT}/fixture/tmp/hack-sitemap.js
 › invig ›
   Done"
`;

exports[`Invig cli invigorates an entire directory 3`] = `0`;

exports[`Invig cli invigorates an entire directory 4`] = `
"#!/usr/bin/env node
const debug = require('debug')('tlc:formats')
const fs = require('fs')
const fileSitemap = \`\${__dirname}/../_site/sitemap.xml\`
let sitemap = fs.readFileSync(fileSitemap, 'utf8')

const baseUrl = 'https://transloadit.com'

const additions = ['/login/', '/accounts/forgot_pw/']

const removals = ['/jekyll.lanyon_assets.yml', '/denied/', '/unpublished/']

let xmlAppend = ''
for (let addition of additions) {
  debug(\`Processing '\${baseUrl}\${addition}'\`)
  let item = ''
  item = \`\${item}<url>\\\\n\`
  item = \`\${item}<loc>\${baseUrl}\${addition}</loc>\\\\n\`
  item = \`\${item}<lastmod>2016-08-17T10:09:28+02:00</lastmod>\\\\n\`
  item = \`\${item}</url>\\\\n\`
  xmlAppend = \`\${xmlAppend}\${item}\`
}

xmlAppend = \`\${xmlAppend}</urlset>\`

sitemap = sitemap.replace('</urlset>', xmlAppend)

for (let removal of removals) {
  const pattern = new RegExp(\`<url>\\\\\\\\s*<loc>\\\\\\\\s*\${baseUrl}\${removal}[^<]*</loc>\\\\\\\\s*</url>\\\\\\\\s*\`, 'gmi')
  sitemap = sitemap.replace(pattern, '')
}

debug(\`Writing \${fileSitemap}\`)
fs.writeFileSync(fileSitemap, sitemap, 'utf8')"
`;

exports[`Invig cli invigorates an entire directory 5`] = `
"{
  \\"scripts\\": {
    \\"lint\\": \\"eslint .\\",
    \\"fix\\": \\"eslint . --fix\\",
    \\"build\\": \\"babel src --source-maps --out-dir lib\\",
    \\"build:watch\\": \\"babel src --watch --source-maps --out-dir lib\\"
  },
  \\"dependencies\\": {},
  \\"devDependencies\\": {
    \\"babel-cli\\": \\"6.24.1\\",
    \\"babel-core\\": \\"6.25.0\\",
    \\"babel-eslint\\": \\"7.2.3\\",
    \\"babel-plugin-add-module-exports\\": \\"0.2.1\\",
    \\"babel-plugin-es6-promise\\": \\"1.1.1\\",
    \\"babel-plugin-syntax-async-functions\\": \\"6.13.0\\",
    \\"babel-plugin-transform-async-to-generator\\": \\"6.24.1\\",
    \\"babel-plugin-transform-object-assign\\": \\"6.22.0\\",
    \\"babel-preset-es2015\\": \\"6.24.1\\",
    \\"eslint\\": \\"3.19.0\\",
    \\"eslint-config-standard\\": \\"10.2.1\\",
    \\"eslint-plugin-import\\": \\"^2.2.0\\",
    \\"eslint-plugin-node\\": \\"^4.2.2\\",
    \\"eslint-plugin-promise\\": \\"3.5.0\\",
    \\"eslint-plugin-react\\": \\"6.10.3\\",
    \\"eslint-plugin-standard\\": \\"3.0.1\\"
  }
}"
`;

exports[`Invig cli invigorates an entire directory 6`] = `""`;

exports[`Invig cli invigorates an entire directory 7`] = `
"› invig › fixture/tmp ›
   Adding npm task project config
   Adding dependencies task project config
   Writing eslint project config
   Writing babel project config
   Writing eslint ignores
   Writing back project config
   Running npm install to accomodate these changes: Add babel-cli to devDependencies. Add babel-core to devDependencies. Add babel-eslint to devDependencies. Add babel-plugin-add-module-exports to devDependencies. Add babel-plugin-es6-promise to devDependencies. Add babel-plugin-syntax-async-functions to devDependencies. Add babel-plugin-transform-async-to-generator to devDependencies. Add babel-plugin-transform-object-assign to devDependencies. Add babel-preset-es2015 to devDependencies. Add eslint to devDependencies. Add eslint-config-standard to devDependencies. Add eslint-plugin-import to devDependencies. Add eslint-plugin-node to devDependencies. Add eslint-plugin-promise to devDependencies. Add eslint-plugin-react to devDependencies. Add eslint-plugin-standard to devDependencies
 › invig › fixture/tmp › yarn ›
   Executing: yarn || npm install
   yarn install vX.X.X
   Done in X.Xs.
 › invig › fixture/tmp/asset-index.js › mv ›
   Executing: #{SCROLEX_ROOT}/node_modules/.bin/lebab --transform=arrow,for-of,for-each,arg-rest,arg-spread,obj-method,obj-shorthand,no-strict,multi-var,let,class,template,default-param,destruct-param #{SCROLEX_ROOT}/fixture/tmp/asset-index.js --out-file #{SCROLEX_ROOT}/fixture/tmp/asset-index.js.es6 && mv -f #{SCROLEX_ROOT}/fixture/tmp/asset-index.js.es6 #{SCROLEX_ROOT}/fixture/tmp/asset-index.js
 › invig › fixture/tmp/asset-index.js › prettier ›
   Executing: #{SCROLEX_ROOT}/node_modules/.bin/prettier --single-quote --print-width 180 --write #{SCROLEX_ROOT}/fixture/tmp/asset-index.js
   #{SCROLEX_ROOT}/fixture/tmp/asset-index.js#{SCROLEX_ROOT}/fixture/tmp/asset-index.js XXms
 › invig › fixture/tmp/asset-index.js › eslint ›
   Executing: #{SCROLEX_ROOT}/node_modules/.bin/eslint --config #{SCROLEX_ROOT}/fixture/tmp/.eslintrc --fix #{SCROLEX_ROOT}/fixture/tmp/asset-index.js
 › invig ›
   Done"
`;

exports[`Invig cli invigorates an entire directory 8`] = `0`;

exports[`Invig cli invigorates an entire directory 9`] = `
"// This file:
// - traverses over its arguments
// - clones assets to a new name, by the md5 of the original content
// - collects a mapping of original basename -> hashed variant (production)
// - collects a mapping of original basename -> original variant (development)
// - ouputs the collection as yaml, for use in e.g. overriding Jekyll config

const argv = require('minimist')(process.argv.slice(2))
const path = require('path')
const crypto = require('crypto')
const fs = require('fs')
const yaml = require('js-yaml')
const collection = {
  production : {},
  development: {},
}

argv._.forEach(filename => {
  const extension = path.extname(filename)
  const basename = path.basename(filename)
  const cleanbase = path.basename(basename, extension)

  // Skip existing asset-indices
  if (cleanbase.match(/^[a-f0-9]{32}$/)) {
    return
  }

  const md5sum = crypto.createHash('md5')
  const s = fs.ReadStream(filename)
  s.on('data', d => {
    md5sum.update(d)
  })

  s.on('end', () => {
    const hash = md5sum.digest('hex')
    const destFile = hash + extension
    const destPath = \`\${path.dirname(filename)}/\${destFile}\`
    const cleanExtension = extension.replace('.', '')
    fs.writeFileSync(destPath, fs.readFileSync(filename, 'utf-8'))
    if (!collection['development'][cleanExtension]) {
      collection['development'][cleanExtension] = {}
    }
    if (!collection['production'][cleanExtension]) {
      collection['production'][cleanExtension] = {}
    }

    collection['development'][cleanExtension][cleanbase] = path.basename(filename)
    collection['production'][cleanExtension][cleanbase] = destFile
  })
})

process.on('exit', () => {
  if (!argv.environment) {
    console.log(yaml.safeDump(collection))
  } else {
    if (!collection[argv.environment]) {
      throw new Error(\`Not found in collection: \${argv.environment}\`)
    } else {
      console.log(yaml.safeDump(collection[argv.environment]))
    }
  }
})"
`;

exports[`Invig cli invigorates an entire directory 10`] = `
"{
  \\"scripts\\": {
    \\"lint\\": \\"eslint .\\",
    \\"fix\\": \\"eslint . --fix\\",
    \\"build\\": \\"babel src --source-maps --out-dir lib\\",
    \\"build:watch\\": \\"babel src --watch --source-maps --out-dir lib\\"
  },
  \\"dependencies\\": {},
  \\"devDependencies\\": {
    \\"babel-cli\\": \\"6.24.1\\",
    \\"babel-core\\": \\"6.25.0\\",
    \\"babel-eslint\\": \\"7.2.3\\",
    \\"babel-plugin-add-module-exports\\": \\"0.2.1\\",
    \\"babel-plugin-es6-promise\\": \\"1.1.1\\",
    \\"babel-plugin-syntax-async-functions\\": \\"6.13.0\\",
    \\"babel-plugin-transform-async-to-generator\\": \\"6.24.1\\",
    \\"babel-plugin-transform-object-assign\\": \\"6.22.0\\",
    \\"babel-preset-es2015\\": \\"6.24.1\\",
    \\"eslint\\": \\"3.19.0\\",
    \\"eslint-config-standard\\": \\"10.2.1\\",
    \\"eslint-plugin-import\\": \\"^2.2.0\\",
    \\"eslint-plugin-node\\": \\"^4.2.2\\",
    \\"eslint-plugin-promise\\": \\"3.5.0\\",
    \\"eslint-plugin-react\\": \\"6.10.3\\",
    \\"eslint-plugin-standard\\": \\"3.0.1\\"
  }
}"
`;

exports[`Invig cli invigorates via stdin 1`] = `"console.log(\\"hello\\")"`;
