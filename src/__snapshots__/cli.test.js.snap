exports[`test invigorates via cli 1`] = `""`;

exports[`test invigorates via cli 2`] = `
" ✔ invig ❯ fixture/tmp ❯ npm ❯ Adding npm task project config
 ✔ invig ❯ fixture/tmp ❯ npm ❯ Adding dependencies task project config
 ✔ invig ❯ fixture/tmp ❯ toEslintStandard ❯ Writing eslint project config
 ✔ invig ❯ fixture/tmp ❯ toEs6 ❯ Writing babel project config
 ✔ invig ❯ fixture/tmp ❯ toJs ❯ Writing eslint ignores
 ✔ invig ❯ fixture/tmp ❯ init ❯ Writing back project config
 ✔ invig ❯ fixture/tmp ❯ init ❯ Running npm install to accomodate these changes: Add babel-cli to devDependencies. Add babel-core to devDependencies. Add babel-eslint to devDependencies. Add babel-plugin-add-module-exports to devDependencies. Add babel-plugin-es6-promise to devDependencies. Add babel-plugin-syntax-async-functions to devDependencies. Add babel-plugin-transform-async-to-generator to devDependencies. Add babel-plugin-transform-object-assign to devDependencies. Add babel-preset-es2015 to devDependencies. Add eslint to devDependencies. Add eslint-config-standard to devDependencies. Add eslint-plugin-promise to devDependencies. Add eslint-plugin-standard to devDependencies
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ yarn install vX.X.X
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ info No lockfile found.
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ warning No license field
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ [1/4] Resolving packages...
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ [2/4] Fetching packages...
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ [3/4] Linking dependencies...
es6-promise warning
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ [4/4] Building fresh packages...
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ success Saved lockfile.
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ Done in X.Xs.
 ✔ invig ❯ fixture/tmp ❯ init ❯ Done in X.Xs.
 ---spinnerframe--- 
 ---spinnerframe--- invig ❯ fixture/tmp/hack-sitemap.coffee ❯ toJs ❯ #{PWD}/fixture/tmp/hack-sitemap.coffee → #{PWD}/fixture/tmp/hack-sitemap.js
 ✔ invig ❯ fixture/tmp/hack-sitemap.coffee ❯ toJs ❯ #{PWD}/fixture/tmp/hack-sitemap.coffee → #{PWD}/fixture/tmp/hack-sitemap.js
 ---spinnerframe--- 
 ---spinnerframe--- invig ❯ fixture/tmp/hack-sitemap.js ❯ toEs6 ❯ lebabed
 ✔ invig ❯ fixture/tmp/hack-sitemap.js ❯ toEs6 ❯ lebabed
 ---spinnerframe--- 
Done. 
"
`;

exports[`test invigorates via cli 3`] = `0`;

exports[`test invigorates via cli 4`] = `
"#!/usr/bin/env node
const debug              = require(\'debug\')(\'tlc:formats\')
const fs                 = require(\'fs\')
const fileSitemap        = \`\${__dirname}/../_site/sitemap.xml\`
let sitemap            = fs.readFileSync(fileSitemap, \'utf8\')

const baseUrl = \'https://transloadit.com\'

const additions = [
  \'/login/\',
  \'/accounts/forgot_pw/\',
]

const removals = [
  \'/jekyll.lanyon_assets.yml\',
  \'/denied/\',
  \'/unpublished/\',
]

let xmlAppend = \'\'
for (let addition of Array.from(additions)) {
  debug(\`Processing \'\${baseUrl}\${addition}\'\`)
  let item      = \'\'
  item      = \`\${item}<url>\\n\`
  item      = \`\${item}<loc>\${baseUrl}\${addition}</loc>\\n\`
  item      = \`\${item}<lastmod>2016-08-17T10:09:28+02:00</lastmod>\\n\`
  item      = \`\${item}</url>\\n\`
  xmlAppend = \`\${xmlAppend}\${item}\`
}

xmlAppend = \`\${xmlAppend}</urlset>\`

sitemap = sitemap.replace(\'</urlset>\', xmlAppend)

for (let removal of Array.from(removals)) {
  const pattern = new RegExp(\`<url>\\\\s*<loc>\\\\s*\${baseUrl}\${removal}[^<]*</loc>\\\\s*</url>\\\\s*\`, \'gmi\')
  sitemap = sitemap.replace(pattern, \'\')
}

debug(\`Writing \${fileSitemap}\`)
fs.writeFileSync(fileSitemap, sitemap, \'utf8\')"
`;

exports[`test invigorates via cli 5`] = `
"{
  \"scripts\": {
    \"lint\": \"eslint .\",
    \"fix\": \"eslint . --fix\",
    \"build\": \"babel src --source-maps --out-dir lib\",
    \"build:watch\": \"babel src --watch --source-maps --out-dir lib\"
  },
  \"dependencies\": {},
  \"devDependencies\": {
    \"babel-cli\": \"6.18.0\",
    \"babel-core\": \"6.21.0\",
    \"babel-eslint\": \"7.1.1\",
    \"babel-plugin-add-module-exports\": \"0.2.1\",
    \"babel-plugin-es6-promise\": \"1.1.0\",
    \"babel-plugin-syntax-async-functions\": \"6.13.0\",
    \"babel-plugin-transform-async-to-generator\": \"6.16.0\",
    \"babel-plugin-transform-object-assign\": \"6.8.0\",
    \"babel-preset-es2015\": \"6.18.0\",
    \"eslint\": \"3.13.1\",
    \"eslint-config-standard\": \"6.2.1\",
    \"eslint-plugin-promise\": \"3.4.0\",
    \"eslint-plugin-standard\": \"2.0.1\"
  }
}"
`;

exports[`test invigorates via cli 6`] = `""`;

exports[`test invigorates via cli 7`] = `
" ✔ invig ❯ fixture/tmp ❯ npm ❯ Adding npm task project config
 ✔ invig ❯ fixture/tmp ❯ npm ❯ Adding dependencies task project config
 ✔ invig ❯ fixture/tmp ❯ toEslintStandard ❯ Writing eslint project config
 ✔ invig ❯ fixture/tmp ❯ toEs6 ❯ Writing babel project config
 ✔ invig ❯ fixture/tmp ❯ toJs ❯ Writing eslint ignores
 ✔ invig ❯ fixture/tmp ❯ init ❯ Writing back project config
 ✔ invig ❯ fixture/tmp ❯ init ❯ Running npm install to accomodate these changes: Add babel-cli to devDependencies. Add babel-core to devDependencies. Add babel-eslint to devDependencies. Add babel-plugin-add-module-exports to devDependencies. Add babel-plugin-es6-promise to devDependencies. Add babel-plugin-syntax-async-functions to devDependencies. Add babel-plugin-transform-async-to-generator to devDependencies. Add babel-plugin-transform-object-assign to devDependencies. Add babel-preset-es2015 to devDependencies. Add eslint to devDependencies. Add eslint-config-standard to devDependencies. Add eslint-plugin-promise to devDependencies. Add eslint-plugin-standard to devDependencies
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ yarn install vX.X.X
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ warning No license field
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ [1/4] Resolving packages...
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ success Already up-to-date.
 ---spinnerframe--- invig ❯ fixture/tmp ❯ init ❯ Done in X.Xs.
 ✔ invig ❯ fixture/tmp ❯ init ❯ Done in X.Xs.
 ---spinnerframe--- 
 ---spinnerframe--- invig ❯ fixture/tmp/asset-index.js ❯ toEs6 ❯ lebabed
 ✔ invig ❯ fixture/tmp/asset-index.js ❯ toEs6 ❯ lebabed
 ---spinnerframe--- 
Done. 
"
`;

exports[`test invigorates via cli 8`] = `0`;

exports[`test invigorates via cli 9`] = `
"// This file:
// - traverses over its arguments
// - clones assets to a new name, by the md5 of the original content
// - collects a mapping of original basename -> hashed variant (production)
// - collects a mapping of original basename -> original variant (development)
// - ouputs the collection as yaml, for use in e.g. overriding Jekyll config

const argv = require(\'minimist\')(process.argv.slice(2))
const path = require(\'path\')
const crypto = require(\'crypto\')
const fs = require(\'fs\')
const yaml = require(\'js-yaml\')
const collection = {
  \'production\' : {},
  \'development\': {},
}

argv._.forEach(filename => {
  const extension = path.extname(filename)
  const basename = path.basename(filename)
  const cleanbase = path.basename(basename, extension)

  // Skip existing asset-indices
  if (cleanbase.match(/^[a-f0-9]{32}$/)) {
    return
  }

  const md5sum = crypto.createHash(\'md5\')
  const s = fs.ReadStream(filename)
  s.on(\'data\', d => {
    md5sum.update(d)
  })

  s.on(\'end\', () => {
    const hash = md5sum.digest(\'hex\')
    const destFile = hash + extension
    const destPath = \`\${path.dirname(filename)}/\${destFile}\`
    const cleanExtension = extension.replace(\'.\', \'\')
    fs.writeFileSync(destPath, fs.readFileSync(filename, \'utf-8\'))
    if (!collection[\'development\'][cleanExtension]) {
      collection[\'development\'][cleanExtension] = {}
    }
    if (!collection[\'production\'][cleanExtension]) {
      collection[\'production\'][cleanExtension] = {}
    }

    collection[\'development\'][cleanExtension][cleanbase] = path.basename(filename)
    collection[\'production\'][cleanExtension][cleanbase] = destFile
  })
})

process.on(\'exit\', () => {
  if (!argv.environment) {
    console.log(yaml.safeDump(collection))
  } else {
    if (!collection[argv.environment]) {
      throw new Error(\`Not found in collection: \${argv.environment}\`)
    } else {
      console.log(yaml.safeDump(collection[argv.environment]))
    }
  }
})"
`;

exports[`test invigorates via cli 10`] = `
"{
  \"scripts\": {
    \"lint\": \"eslint .\",
    \"fix\": \"eslint . --fix\",
    \"build\": \"babel src --source-maps --out-dir lib\",
    \"build:watch\": \"babel src --watch --source-maps --out-dir lib\"
  },
  \"dependencies\": {},
  \"devDependencies\": {
    \"babel-cli\": \"6.18.0\",
    \"babel-core\": \"6.21.0\",
    \"babel-eslint\": \"7.1.1\",
    \"babel-plugin-add-module-exports\": \"0.2.1\",
    \"babel-plugin-es6-promise\": \"1.1.0\",
    \"babel-plugin-syntax-async-functions\": \"6.13.0\",
    \"babel-plugin-transform-async-to-generator\": \"6.16.0\",
    \"babel-plugin-transform-object-assign\": \"6.8.0\",
    \"babel-preset-es2015\": \"6.18.0\",
    \"eslint\": \"3.13.1\",
    \"eslint-config-standard\": \"6.2.1\",
    \"eslint-plugin-promise\": \"3.4.0\",
    \"eslint-plugin-standard\": \"2.0.1\"
  }
}"
`;
